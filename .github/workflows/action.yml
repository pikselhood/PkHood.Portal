name: Action
on:
    push:
        branches: [main]
    #workflow_dispatch:
env:
    IMAGE_URL: ghcr.io/pikselhood/pkhood.portal:latest
jobs:
    build:
        runs-on: ubuntu-latest
        env:
            DOCKER_TAG: pkhood-portal
            CR_PAT: ${{ secrets.CR_PAT }}
            CI_REGISTRY: ghcr.io
            DOCKER_PORT: 80:3000
        steps:
            - uses: actions/checkout@v2
              with:
                submodules: 'true'
                token: ${{ secrets.CR_PAT }}

#             - name: git sumbodule update
#               run: |
#                 git pull --recurse-submodules
#                 git submodule update --remote --recursive
#                 npm i ncp
#                 node copy-build-files.js

            - name: docker login
              run: |
                echo $CR_PAT | docker login $CI_REGISTRY -u ${{ github.run_id }} --password-stdin

            - name: docker build
              run: |
                docker build . --tag $IMAGE_URL

            - name: docker push
              run: |
                docker push $IMAGE_URL    

    deploy:
        needs: build
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2

            - name: Deploy in EC2
              env:
                SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY  }}
                ACCESS_KEY_ID : ${{ secrets.ACCESS_KEY_ID  }}

              run: |
                echo "$SSH_PRIVATE_KEY" > private_key && chmod 600 private_key
                ssh -o StrictHostKeyChecking=no -i private_key $ACCESS_KEY_ID '
                
                    #Now we have got the access of VM and we will start the deploy .
                    echo "'$CR_PAT'" | sudo docker login "'$CI_REGISTRY'" -u ${{ github.run_id }} --password-stdin
                    sudo docker rm -vf "'$DOCKER_TAG'"
                    sudo docker image prune -af
                    sudo docker pull "'$IMAGE_URL'" 
                    sudo docker run -d -p "'$DOCKER_PORT'" --name="'$DOCKER_TAG'" "'$IMAGE_URL'"
                  '
