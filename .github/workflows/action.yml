name: Action
on:
    push:
        branches: [main]
    #workflow_dispatch:
env:
    IMAGE_URL: ghcr.io/pikselhood/pkhood.portal:latest
jobs:
    build:
        runs-on: ubuntu-latest
        env:
            CR_PAT: ${{ secrets.CR_PAT }}
            CI_REGISTRY: ghcr.io
        steps:
            - uses: actions/checkout@v2

            - name: docker login
              run: |
                  echo $CR_PAT | docker login $CI_REGISTRY -u ${{ github.run_id }} --password-stdin

            - name: docker build
              run: |
                  docker build . --tag $IMAGE_URL

            - name: docker push
              run: |
                  docker push $IMAGE_URL
                  
    BuildUnity:
        name: Build for ${{ matrix.targetPlatform }}
        runs-on: ubuntu-latest
        strategy:
          fail-fast: false
          matrix:
            targetPlatform:
#               - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
#               - StandaloneWindows # Build a Windows standalone.
#               - StandaloneWindows64 # Build a Windows 64-bit standalone.
#               - StandaloneLinux64 # Build a Linux 64-bit standalone.
#               - iOS # Build an iOS player.
#               - Android # Build an Android .apk standalone app.
              - WebGL # WebGL.
        steps:
          - uses: actions/checkout@v2
            with:
              fetch-depth: 0
              lfs: true
          - uses: actions/cache@v2
            with:
              path: Library
              key: Library-${{ matrix.targetPlatform }}
              restore-keys: Library-
          - uses: game-ci/unity-builder@v2
            env:
              UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
            with:
              targetPlatform: ${{ matrix.targetPlatform }}
          - uses: actions/upload-artifact@v2
            with:
              name: Build-${{ matrix.targetPlatform }}
              path: build/${{ matrix.targetPlatform }}
    # Deploy:
    #     needs: build
    #     runs-on: ubuntu-latest

    #     steps:
    #         - uses: actions/checkout@v2

    #         - name: Deploy in EC2
    #           env:
    #               RSA_PRIVATE_KEY: ${{ secrets.AWS_RSA_PRIVATE_KEY  }}
    #               ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID  }}

    #           run: |
    #               echo "$RSA_PRIVATE_KEY" > private_key && chmod 600 private_key
    #               ssh -o StrictHostKeyChecking=no -i private_key $ACCESS_KEY_ID '
    #                 #Now we have got the access of EC2 and we will start the deploy .
    #                 sudo docker rm -vf $(sudo docker ps -a -q)
    #                 sudo docker rmi -f $(sudo docker images -a -q)
    #                 sudo docker pull "'$IMAGE_URL'" 
    #                 sudo docker run -d -p 80:3000 --name=client $(sudo docker images -a -q)
    #               '
